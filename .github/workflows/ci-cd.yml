name: ci-cd

on: [push, pull_request]

jobs:
  ci:
    # Step 1. Set up operating system
    runs-on: ubuntu-latest
    steps:
    # Step 2. Set up Python 3.9
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
    # Step 3. Check-out repository so we can access its contents
    - uses: actions/checkout@v2
    # Step 4. Install poetry
    - uses: snok/install-poetry@v1
    # Step 5. Install our pycounts package
    - name: Install package
      run: poetry install
    # Step 6. Run tests for pycounts
    - name: Test with pytest
      run: poetry run pytest tests/ --cov=pycountsac --cov-report=xml 
    # Step 7. Use Codecov to track coverage
    - uses: codecov/codecov-action@v2
      with:
        file: ./coverage.xml    # coverage report
        fail_ci_if_error: true  # terminate workflow if there's an error
    # Step 8. Build documentation
    - name: Build documentation
      run: poetry run make html --directory docs/ 
  # cd:
  #   permissions:
  #     id-token: write
  #     contents: write

  #   # Only run this job if the "ci" job passes
  #   needs: ci

  #   # Only run this job if new work is pushed to the "main" branch
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'

  #   # Set up operating system
  #   runs-on: ubuntu-latest

  #   # Define job steps
  #   steps:
  #   - name: Set up Python 3.9
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: 3.9

  #   - name: Check-out repository
  #     uses: actions/checkout@v2
  #     with:
  #       fetch-depth: 0

  #   - name: Use Python Semantic Release to prepare release
  #      id: release
  #      uses: python-semantic-release/python-semantic-release@v8.3.0
  #      with:
  #        github_token: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Publish package distributions to GitHub Releases
  #       uses: python-semantic-release/upload-to-gh-release@main
  #       if: steps.release.outputs.released == 'true'
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}